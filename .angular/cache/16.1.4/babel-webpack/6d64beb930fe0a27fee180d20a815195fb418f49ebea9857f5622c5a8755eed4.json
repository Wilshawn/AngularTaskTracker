{"ast":null,"code":"import { of } from 'rxjs';\nimport { TASKS } from '../mock-tasks';\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {}\n  getTasks() {\n    const tasks = of(TASKS);\n    return tasks;\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)();\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","TASKS","TaskService","constructor","getTasks","tasks","factory","ɵfac","providedIn"],"sources":["/Users/wilshawnalexander/Documents/angular-crash-course/angular-crash/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Task } from '../Task';\nimport { TASKS } from '../mock-tasks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor() { }\n\n  getTasks(): Observable<Task[]> {\n    const tasks = of(TASKS);\n    return tasks;\n  }\n}\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AAErC,SAASC,KAAK,QAAQ,eAAe;;AAKrC,OAAM,MAAOC,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAGL,EAAE,CAACC,KAAK,CAAC;IACvB,OAAOI,KAAK;EACd;;AAPWH,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAI,OAAA,EAAXJ,WAAW,CAAAK,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}