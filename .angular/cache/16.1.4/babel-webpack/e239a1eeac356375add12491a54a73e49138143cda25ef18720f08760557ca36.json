{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ui.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AddTaskComponent {\n  constructor(uiService) {\n    this.uiService = uiService;\n    this.onAddTask = new EventEmitter();\n    this.text = '';\n    this.day = '';\n    this.reminder = false;\n    this.subscription = this.uiService.onToggle().subscribe(value => this.showAddTask = value);\n  }\n  onSubmit() {\n    if (!this.text) {\n      alert('please add a task!');\n      return;\n    }\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder\n    };\n    this.onAddTask.emit(newTask);\n    this.text = '';\n    this.day = '', this.reminder = false;\n  }\n}\nAddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n  return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.UiService));\n};\nAddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTaskComponent,\n  selectors: [[\"app-add-task\"]],\n  outputs: {\n    onAddTask: \"onAddTask\"\n  },\n  decls: 14,\n  vars: 3,\n  consts: [[1, \"add-form\", 3, \"ngSubmit\"], [1, \"form-control\"], [\"for\", \"text\"], [\"type\", \"text\", \"name\", \"text\", \"id\", \"text\", \"placeholder\", \"Add Text\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"day\"], [\"type\", \"text\", \"name\", \"day\", \"id\", \"day\", \"placeholder\", \"Add Day & Time\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"form-control-check\"], [\"for\", \"reminder\"], [\"type\", \"checkbox\", \"name\", \"reminder\", \"id\", \"reminder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save Task\", 1, \"btn\", \"btn-block\"]],\n  template: function AddTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.text = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Day & Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.day = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Set Reminder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.reminder = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.text);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.day);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.reminder);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\".add-form[_ngcontent-%COMP%] {\\n    margin-bottom: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtdGFzay9hZGQtdGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZC1mb3JtIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["EventEmitter","AddTaskComponent","constructor","uiService","onAddTask","text","day","reminder","subscription","onToggle","subscribe","value","showAddTask","onSubmit","alert","newTask","emit","i0","ɵɵdirectiveInject","i1","UiService","selectors","outputs","decls","vars","consts","template","AddTaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AddTaskComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","AddTaskComponent_Template_input_ngModelChange_4_listener","$event","AddTaskComponent_Template_input_ngModelChange_8_listener","AddTaskComponent_Template_input_ngModelChange_12_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/Users/wilshawnalexander/Documents/angular-crash-course/angular-crash/src/app/components/add-task/add-task.component.ts","/Users/wilshawnalexander/Documents/angular-crash-course/angular-crash/src/app/components/add-task/add-task.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { UiService } from 'src/app/services/ui.service';\nimport { Task } from 'src/app/Task';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent {\n  @Output() onAddTask: EventEmitter<Task> = new EventEmitter();\n  text: string = '';\n  day: string = '';\n  reminder: boolean = false;\n  showAddTask!: boolean;\n  subscription!: Subscription;\n\n  constructor(private uiService: UiService) {\n    this.subscription = this.uiService.onToggle().subscribe(value => this.showAddTask = value);\n  }\n\n  onSubmit() {\n    if(!this.text) {\n      alert('please add a task!');\n      return\n    }\n\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder\n    }\n\n    this.onAddTask.emit(newTask);\n\n    this.text = '';\n    this.day = '',\n    this.reminder = false;\n  }\n}\n","<form class=\"add-form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-control\">\n        <label for=\"text\">Task</label>\n        <input type=\"text\" name=\"text\" id=\"text\" [(ngModel)]=\"text\" placeholder=\"Add Text\" />\n    </div>\n    <div class=\"form-control\">\n        <label for=\"day\">Day & Time</label>\n        <input type=\"text\" [(ngModel)]=\"day\" name=\"day\" id=\"day\" placeholder=\"Add Day & Time\" />\n    </div>\n    <div class=\"form-control form-control-check\">\n        <label for=\"reminder\">Set Reminder</label>\n        <input type=\"checkbox\" name=\"reminder\" [(ngModel)]=\"reminder\" id=\"reminder\" />\n    </div>\n    <input type=\"submit\" value=\"Save Task\" class=\"btn btn-block\">\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}