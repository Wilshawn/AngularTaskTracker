{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/tasks';\n  }\n  getTasks() {\n    return this.http.get(this.apiUrl);\n  }\n  deleteTask(task) {\n    const url = `${this.apiUrl}/${task.id}`;\n    return this.http.delete(url);\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TaskService","constructor","http","apiUrl","getTasks","get","deleteTask","task","url","id","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/wilshawnalexander/Documents/angular-crash-course/angular-crash/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Task } from '../Task';\nimport { TASKS } from '../mock-tasks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  private apiUrl = 'http://localhost:3000/tasks';\n\n  constructor(private http:HttpClient) { }\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.apiUrl);\n  }\n\n  deleteTask(task: Task): Observable<Task> {\n    const url = `${this.apiUrl}/${task.id}`;\n    return this.http.delete<Task>(url);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6BAA6B;EAEP;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,UAAUA,CAACC,IAAU;IACnB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,IAAII,IAAI,CAACE,EAAE,EAAE;IACvC,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAOF,GAAG,CAAC;EACpC;;AAbWR,WAAW,C;mBAAXA,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXd,WAAW,C;SAAXA,WAAW;EAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}